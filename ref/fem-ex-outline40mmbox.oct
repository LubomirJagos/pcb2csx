% Manually coded export of the file
% fem-ex-outline40mmbox.pcb
% into openems's geometry format.
% This should produce a square shaped pcb substrate extruded in the z axis.


% this stuff is needed top initialize things for csxcad
f_max = 7e9;
FDTD = InitFDTD();
FDTD = SetGaussExcite( FDTD, f_max/2, f_max/2 );
BC   = {'PML_8' 'PML_8' 'MUR' 'MUR' 'PEC' 'MUR'};
FDTD = SetBoundaryCond( FDTD, BC );

physical_constants;
substrate_epr = 3.66;
% the following comment and unit declaration are from
% https://www.guenael.ca/content/Slot-antennas-for-amateur-radio-bands-EN-Guenael.pdf
% setup the simulation physical_constants;
unit = 1.0e-3; % all length in mm


% oshpark (our current pcb vendor) lists the standard thickness as 1.6mm
substrate_thick = 1.6;
substrate_center_z = 2;

CSX = InitCSX();
MSL_length = 50;
MSL_width = 6;
stub_length = 12;
resolution = c0/(f_max*sqrt(substrate_epr))/unit /50; % resolution of lambda/50
mesh.x = SmoothMeshLines( [0 MSL_width/2+[resolution/3 -resolution/3*2]/4], resolution/4, 1.5 ,0 );
mesh.x = SmoothMeshLines( [-MSL_length -mesh.x mesh.x MSL_length], resolution, 1.5 ,0 );
mesh.y = SmoothMeshLines( [0 MSL_width/2+[-resolution/3 +resolution/3*2]/4], resolution/4 , 1.5 ,0);
mesh.y = SmoothMeshLines( [-15*MSL_width -mesh.y mesh.y 15*MSL_width+stub_length], resolution, 1.5 ,0);
mesh.z = SmoothMeshLines( [linspace(0,substrate_thick,5) 10*substrate_thick], resolution );
CSX = DefineRectGrid( CSX, unit, mesh );

% the following three lines are shamelessly copied from the following link and are not just values to make the rendering work.
% http://openems.de/index.php/Tutorial:_Microstrip_Notch_Filter
CSX = AddMaterial( CSX, 'RO4350B' );
CSX = SetMaterialProperty( CSX, 'RO4350B', 'Epsilon', substrate_epr );

% where vertically is the substrate
substrate_bottom_z = substrate_center_z - substrate_thick/2;
substrate_top_z = substrate_center_z + substrate_thick/2;
% how to seperate the matterials
substrate_prio = 1;
copperplane_prio = substrate_prio + 1;
clearance_prio = copperplane_prio + 1;
coppertrace_prio = clearance_prio + 1;
void_prio = coppertrace_prio + 1;

% 1st x value; 1st y value
substrate_xy(1, 1) = 0; substrate_xy(2, 1) = 0;
% 2nd x value; 2nd y value
substrate_xy(1, 2) = 40; substrate_xy(2, 2) = 0;
% so on
substrate_xy(1, 3) = 40; substrate_xy(2, 3) = -40;
substrate_xy(1, 4) = 0; substrate_xy(2, 4) = -40;

CSX = AddLinPoly( CSX, 'RO4350B', 1, 2, substrate_bottom_z, substrate_xy , substrate_thick, 'CoordSystem',0);

% copied from http://openems.de/index.php/Tutorial:_Microstrip_Notch_Filter
% this stuff enables the xml export and graphing to work
Sim_Path = 'tmp';
Sim_CSX = 'msl.xml';
[status, message, messageid] = rmdir( Sim_Path, 's' ); % clear previous directory
[status, message, messageid] = mkdir( Sim_Path ); % create empty simulation folder
WriteOpenEMS( [Sim_Path '/' Sim_CSX], FDTD, CSX );
CSXGeomPlot( [Sim_Path '/' Sim_CSX] );
%RunOpenEMS( Sim_Path, Sim_CSX );



